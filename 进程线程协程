1.进程线程协程使用场景
  进程和协程多使用在I/O操作场景，而进程多使用在计算场景。
  线程存在GIL问题，其对于计算密集型的任务没有什么帮助。
2.线程和协程区别
  协程在线程中实现调度。你可以理解为它是 「微线程」 。它的调度不来自于CPU，而是完全来自于用户控制（可以理解为用代码控制流程）。
  协程的执行效率非常高，它的切换不是线程切换，没有线程切换的开销。而且只要线程越多，协程的性能优势就越明显。
  协程不需要多线程的锁机制，只需要判断状态即可。不过协程本身无法利用多核CPU，因为它基于线程，而线程又依赖于进程。
  
